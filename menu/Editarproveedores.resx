<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2Q0Z/wAAAABJRU5ErkJggg==
</value>
  </data>
</root>